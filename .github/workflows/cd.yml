name: Terraform Apply

on:
  push:
    branches: [main]

permissions:
  contents: read
  id-token: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_dir: ${{ steps.set-dir.outputs.dir }}
      secret_key: ${{ steps.set-dir.outputs.secret_key }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect changed directories
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            operation:
              - 'operation-team-account/**'
            identity:
              - 'identity-team-account/**'
            prod:
              - 'prod-team-account/**'

      - name: Set changed dir output
        id: set-dir
        run: |
          if [[ "${{ steps.changes.outputs.operation }}" == "true" ]]; then
            echo "dir=operation-team-account" >> $GITHUB_OUTPUT
            echo "secret_key=ROLE_ARN_OPERATION" >> $GITHUB_OUTPUT
          elif [[ "${{ steps.changes.outputs.identity }}" == "true" ]]; then
            echo "dir=identity-team-account" >> $GITHUB_OUTPUT
            echo "secret_key=ROLE_ARN_IDENTITY" >> $GITHUB_OUTPUT
          elif [[ "${{ steps.changes.outputs.prod }}" == "true" ]]; then
            echo "dir=prod-team-account" >> $GITHUB_OUTPUT
            echo "secret_key=ROLE_ARN_PROD" >> $GITHUB_OUTPUT
          else
            echo "dir=" >> $GITHUB_OUTPUT
            echo "secret_key=" >> $GITHUB_OUTPUT
          fi

  terraform-apply:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.changed_dir != ''

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          role-to-assume: ${{ secrets[needs.detect-changes.outputs.secret_key] }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.0

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ needs.detect-changes.outputs.changed_dir }}

      - name: Terraform Import S3 Bucket
        run: terraform import aws_s3_bucket.state_org cloudfence-identity-bucket
        working-directory: ${{ needs.detect-changes.outputs.changed_dir }}

      - name: Terraform Import DynamoDB Table
        run: terraform import aws_dynamodb_table.lock_org cloudfence-identity-lock
        working-directory: ${{ needs.detect-changes.outputs.changed_dir }}

      - name: Terraform Plan
        run: terraform plan -no-color
        working-directory: ${{ needs.detect-changes.outputs.changed_dir }}
        continue-on-error: true

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ${{ needs.detect-changes.outputs.changed_dir }}
