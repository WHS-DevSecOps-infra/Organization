name: Terraform Apply

on:
  push:
    branches: [main]

permissions:
  contents: read
  id-token: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_dirs: ${{ steps.set-dir.outputs.changed_dirs }}
      secret_keys: ${{ steps.set-dir.outputs.secret_keys }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect changed directories
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            operation:
              - 'operation-team-account/**'
            identity:
              - 'identity-team-account/**'
            prod:
              - 'prod-team-account/**'
            dev:
              - 'dev-team-account/**'
            security:
              - 'security-team-account/**'
            stage:
              - 'stage-team-account/**'
            management:
              - 'management-team-account/**'

      - name: Set changed dirs output
        id: set-dir
        run: |
          CHANGED_DIRS=""
          SECRET_KEYS=""

          if [[ "${{ steps.changes.outputs.operation }}" == "true" ]]; then
            CHANGED_DIRS="operation-team-account"
            SECRET_KEYS="ROLE_ARN_OPERATION"
          fi
          if [[ "${{ steps.changes.outputs.identity }}" == "true" ]]; then
            CHANGED_DIRS="$CHANGED_DIRS identity-team-account"
            SECRET_KEYS="$SECRET_KEYS ROLE_ARN_IDENTITY"
          fi
          if [[ "${{ steps.changes.outputs.prod }}" == "true" ]]; then
            CHANGED_DIRS="$CHANGED_DIRS prod-team-account"
            SECRET_KEYS="$SECRET_KEYS ROLE_ARN_PROD"
          fi
          if [[ "${{ steps.changes.outputs.dev }}" == "true" ]]; then
            CHANGED_DIRS="$CHANGED_DIRS dev-team-account"
            SECRET_KEYS="$SECRET_KEYS ROLE_ARN_DEV"
          fi
          if [[ "${{ steps.changes.outputs.security }}" == "true" ]]; then
            CHANGED_DIRS="$CHANGED_DIRS security-team-account"
            SECRET_KEYS="$SECRET_KEYS ROLE_ARN_SECURITY"
          fi
          if [[ "${{ steps.changes.outputs.stage }}" == "true" ]]; then
            CHANGED_DIRS="$CHANGED_DIRS stage-team-account"
            SECRET_KEYS="$SECRET_KEYS ROLE_ARN_STAGE"
          fi
          if [[ "${{ steps.changes.outputs.management }}" == "true" ]]; then
            CHANGED_DIRS="$CHANGED_DIRS management-team-account"
            SECRET_KEYS="$SECRET_KEYS ROLE_ARN_MANAGEMENT"
          fi

          echo "changed_dirs=$CHANGED_DIRS" >> $GITHUB_OUTPUT
          echo "secret_keys=$SECRET_KEYS" >> $GITHUB_OUTPUT

  terraform-apply:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.changed_dirs != ''
    strategy:
      matrix:
        dir: ${{ fromJson(needs.detect-changes.outputs.changed_dirs) }}
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          role-to-assume: ${{ secrets[needs.detect-changes.outputs.secret_keys] }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.0

      - name: Terraform Init and Apply for Changed Directories
        run: |
          echo "Running Terraform for directory: ${{ matrix.dir }}"
          terraform init
          terraform apply -auto-approve
        working-directory: ${{ matrix.dir }}
